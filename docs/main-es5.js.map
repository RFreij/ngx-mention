{"version":3,"sources":["webpack:///ngx-mention/src/lib/ngx-mention-list/ngx-mention-list.component.ts","webpack:///ngx-mention/src/lib/ngx-mention-list/ngx-mention-list.component.html","webpack:///ngx-mention/src/lib/ngx-mention.directive.ts","webpack:///ngx-mention/src/lib/ngx-mention.module.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["EXTRA_OFFSET","FIRST_ITEM_INDEX","SELECTED_CLASS","NgxMentionListComponent","elementRef","renderer","items","hidden","activeIndex","itemClick","parentElement","nativeElement","parentBounds","getBoundingClientRect","offsetTop","parseFloat","window","getComputedStyle","height","setStyle","left","top","container","activeElement","getElementsByClassName","item","activeItemIndex","getItemIndex","id","nextItemIndex","nextElement","document","getElementById","nextElementRect","bottom","scrollTop","clientHeight","previousElement","previousElementRect","index","emit","setTimeout","elementId","split","selector","templateUrl","styleUrls","NgxMentionDirective","componentResolver","viewContainerRef","searching","mentionList","searchTerm","selectItem","defaultConfig","denotationCharacter","minimalCharacters","disableSearch","ngxMentionConfig","input$","subscribe","mentionDenotationCharacter","value","endsWith","startIndex","length","endIndex","stopSearch","startSearching","keyDown$","pipe","$event","key","stopEvent","onItemSelect","activateNextItem","activatePreviousItem","blur$","KeyboardEvent","changes","firstChange","updateMentionListItems","searchValue","substring","showMentionList","matches","filter","toLowerCase","startsWith","selectedItem","focus","valueLength","setSelectionRange","resetScrollTop","componentFactory","resolveComponentFactory","componentRef","createComponent","instance","position","mentionListItemClick$","preventDefault","stopPropagation","stopImmediatePropagation","unsubscribe","NgxMentionModule","declarations","imports","exports","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","AppComponent","title","onMentionSearch","AppModule","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Output,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { NgxMention, NgxMentionConfig } from '../ngx-mention.config';\n\nconst EXTRA_OFFSET = 5;\nconst FIRST_ITEM_INDEX = 0;\nconst SELECTED_CLASS = 'ngx-mention__item--selected';\n\n@Component({\n    selector: 'nc-ngx-mention-list',\n    templateUrl: './ngx-mention-list.component.html',\n    styleUrls: ['./ngx-mention-list.component.scss'],\n})\nexport class NgxMentionListComponent {\n    public items: NgxMention[] = [];\n    public hidden = true;\n    public activeIndex = 0;\n    public ngxMentionConfig: NgxMentionConfig;\n\n    @ViewChild('container') public container: ElementRef;\n    @Output() itemClick: EventEmitter<void>;\n\n    constructor(\n        private readonly elementRef: ElementRef,\n        private readonly renderer: Renderer2,\n    ) {\n        this.itemClick = new EventEmitter();\n    }\n\n    /**\n     * Positions ngx mention list component\n     *\n     * @param parentElement\n     *\n     * @author Roy Freij <info@royfreij.nl>\n     * @version 1.0.0\n     */\n    public position(\n        parentElement: HTMLInputElement | HTMLTextAreaElement,\n    ): void {\n        const nativeElement = this.elementRef.nativeElement;\n        const parentBounds = parentElement.getBoundingClientRect();\n\n        const offsetTop =\n            parseFloat(window.getComputedStyle(parentElement).height) +\n            EXTRA_OFFSET;\n\n        this.renderer.setStyle(nativeElement, 'position', 'absolute');\n        this.renderer.setStyle(nativeElement, 'left', `${parentBounds.left}px`);\n        this.renderer.setStyle(\n            nativeElement,\n            'top',\n            `${parentBounds.top + offsetTop}px`,\n        );\n    }\n\n    /**\n     * Activates next item\n     *\n     * @author Roy Freij <info@royfreij.nl>\n     * @version 1.0.0\n     */\n    public activateNextItem(): void {\n        const container: HTMLDivElement = this.container.nativeElement;\n        const activeElement = container\n            .getElementsByClassName(SELECTED_CLASS)\n            .item(FIRST_ITEM_INDEX);\n\n        if (activeElement) {\n            const activeItemIndex = this.getItemIndex(activeElement.id);\n\n            const nextItemIndex = activeItemIndex + 1;\n            const nextElement = document.getElementById(\n                `mention-item-${nextItemIndex}`,\n            );\n\n            if (nextElement) {\n                const nextElementRect = nextElement.getBoundingClientRect();\n\n                if (\n                    nextElementRect.bottom >\n                    container.getBoundingClientRect().bottom\n                ) {\n                    container.scrollTop =\n                        nextElement.offsetTop +\n                        nextElementRect.height -\n                        container.clientHeight;\n                }\n\n                this.activeIndex = nextItemIndex;\n            }\n        }\n    }\n\n    /**\n     * Activates previous item\n     *\n     * @author Roy Freij <info@royfreij.nl>\n     * @version 1.0.0\n     */\n    public activatePreviousItem(): void {\n        const container: HTMLDivElement = this.container.nativeElement;\n        const activeElement = container\n            .getElementsByClassName(SELECTED_CLASS)\n            .item(FIRST_ITEM_INDEX);\n\n        if (activeElement) {\n            const activeItemIndex = this.getItemIndex(activeElement.id);\n\n            const nextItemIndex = activeItemIndex - 1;\n            const previousElement = document.getElementById(\n                `mention-item-${nextItemIndex}`,\n            );\n\n            if (previousElement) {\n                const previousElementRect = previousElement.getBoundingClientRect();\n\n                if (\n                    previousElementRect.bottom <\n                    container.getBoundingClientRect().top\n                ) {\n                    container.scrollTop = previousElement.offsetTop;\n                }\n\n                this.activeIndex = nextItemIndex;\n            }\n        }\n    }\n\n    /**\n     * Determines whether item is clicked on\n     *\n     * @param item\n     *\n     * @author Roy Freij <info@royfreij.nl>\n     * @version 1.0.0\n     */\n    public onItemCLick(index: number): void {\n        this.activeIndex = index;\n        this.itemClick.emit();\n    }\n\n    /**\n     * Resets scroll top\n     *\n     * @author Roy Freij <info@royfreij.nl>\n     * @version 1.0.0\n     */\n    public resetScrollTop(): void {\n        // Needs to be activated after the container is created\n        setTimeout(() => {\n            this.container.nativeElement.scrollTop = 0;\n        });\n    }\n\n    /**\n     * Tracks by chat message id\n     *\n     * @param index\n     * @param item\n     *\n     * @returns ngx mention item ID\n     *\n     * @author Roy Freij <roy@bsbip.com>\\\n     * @version 1.0.0\n     */\n    public trackByItemId(index: number, item: NgxMention): string | number {\n        return item.id;\n    }\n\n    /**\n     * Gets item index\n     *\n     * @param elementId\n     *\n     * @returns index\n     *\n     * @author Roy Freij <info@royfreij.nl>\n     */\n    private getItemIndex(elementId: string): number {\n        return parseFloat(elementId.split('mention-item-')[1]);\n    }\n}\n","<div\n    #container\n    class=\"ngx-mention\"\n    [ngClass]=\"{ 'ngx-mention--visible': !hidden }\"\n>\n    <div\n        class=\"ngx-mention__item\"\n        [ngClass]=\"{ 'ngx-mention__item--selected': i === activeIndex }\"\n        *ngFor=\"let item of items; let i = index; trackBy: trackByItemId\"\n        id=\"mention-item-{{ i }}\"\n        (click)=\"onItemCLick(i)\"\n    >\n        {{ item.value }}\n    </div>\n</div>\n","import {\n    ComponentFactoryResolver,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewContainerRef,\n} from '@angular/core';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport { NgxMentionListComponent } from './ngx-mention-list/ngx-mention-list.component';\nimport { NgxMention, NgxMentionConfig } from './ngx-mention.config';\n\n@Directive({\n    selector: '[ncNgxMention]',\n})\nexport class NgxMentionDirective implements OnInit, OnChanges, OnDestroy {\n    @Input('ncNgxMention') public items: NgxMention[];\n    @Input() public ngxMentionConfig: NgxMentionConfig;\n\n    @Output() searchTerm: EventEmitter<string>;\n    @Output() selectItem: EventEmitter<NgxMention>;\n\n    private keyDown$: Subscription;\n    private input$: Subscription;\n    private blur$: Subscription;\n    private mentionListItemClick$: Subscription;\n\n    private defaultConfig: NgxMentionConfig;\n\n    private startIndex: number;\n    private searching = false;\n    private nativeElement: HTMLInputElement | HTMLTextAreaElement;\n\n    private mentionList: NgxMentionListComponent = null;\n\n    constructor(\n        private readonly elementRef: ElementRef<\n            HTMLInputElement | HTMLTextAreaElement\n        >,\n        private readonly componentResolver: ComponentFactoryResolver,\n        private readonly viewContainerRef: ViewContainerRef,\n    ) {\n        this.searchTerm = new EventEmitter();\n        this.selectItem = new EventEmitter();\n\n        this.defaultConfig = {\n            denotationCharacter: '@',\n            minimalCharacters: 0,\n            disableSearch: false,\n        };\n    }\n\n    /**\n     * on init\n     *\n     * @author Roy Freij <info@royfreij.nl>\n     * @version 1.0.0\n     */\n    public ngOnInit(): void {\n        this.ngxMentionConfig = {\n            ...this.defaultConfig,\n            ...this.ngxMentionConfig,\n        };\n\n        this.nativeElement = this.elementRef.nativeElement;\n\n        this.input$ = fromEvent(this.nativeElement, 'input').subscribe(() => {\n            const mentionDenotationCharacter = this.ngxMentionConfig\n                .denotationCharacter;\n\n            if (this.nativeElement.value.endsWith(mentionDenotationCharacter)) {\n                this.startIndex = this.nativeElement.value.length;\n\n                this.searching = true;\n            }\n\n            const endIndex = this.nativeElement.value.length;\n\n            if (this.searching) {\n                if (endIndex < this.startIndex) {\n                    this.stopSearch();\n                } else {\n                    this.startSearching(endIndex);\n                }\n            }\n        });\n\n        this.keyDown$ = fromEvent(this.nativeElement, 'keydown')\n            .pipe(\n                distinctUntilChanged(),\n                filter(($event: KeyboardEvent) => {\n                    return $event.key !== 'Shift';\n                }),\n            )\n            .subscribe(($event: KeyboardEvent) => {\n                if (!this.mentionList?.hidden) {\n                    switch ($event.key) {\n                        case 'Tab':\n                        case 'Enter':\n                            this.stopEvent($event);\n                            this.onItemSelect();\n                            break;\n                        case 'Escape':\n                            this.stopSearch();\n                            break;\n                        case 'ArrowDown':\n                            this.stopEvent($event);\n                            this.mentionList.activateNextItem();\n                            break;\n                        case 'ArrowUp':\n                            this.stopEvent($event);\n                            this.mentionList.activatePreviousItem();\n                            break;\n                        default:\n                    }\n                }\n            });\n\n        this.blur$ = fromEvent(this.nativeElement, 'blur').subscribe(\n            ($event) => {\n                if ($event instanceof KeyboardEvent) {\n                    this.stopEvent($event);\n                    this.stopSearch();\n                }\n            },\n        );\n    }\n\n    /**\n     * on changes\n     *\n     * @param changes\n     *\n     * @author Roy Freij <info@royfreij.nl>\n     * @version 1.0.0\n     */\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.items && !changes.items.firstChange) {\n            this.updateMentionListItems(this.items);\n        }\n    }\n\n    /**\n     * Starts searching\n     *\n     * @param endIndex\n     *\n     * @author Roy Freij <info@royfreij.nl>\n     * @version 1.0.0\n     */\n    private async startSearching(endIndex: number) {\n        let matches: NgxMention[];\n        const searchValue = this.nativeElement.value.substring(\n            this.startIndex,\n            endIndex,\n        );\n\n        if (searchValue.length >= this.ngxMentionConfig.minimalCharacters) {\n            this.searchTerm.emit(searchValue);\n\n            this.showMentionList();\n\n            if (!this.ngxMentionConfig.disableSearch) {\n                matches = this.items.filter((item: NgxMention) => {\n                    return item.value\n                        .toLowerCase()\n                        .startsWith(searchValue.toLowerCase());\n                });\n\n                this.updateMentionListItems(matches);\n            }\n        }\n    }\n\n    /**\n     * Determines whether item is selected\n     *\n     * @author Roy Freij <info@royfreij.nl>\n     * @version 1.0.0\n     */\n    private onItemSelect(): void {\n        const selectedItem = this.mentionList.items[\n            this.mentionList.activeIndex\n        ];\n\n        this.nativeElement.value =\n            this.nativeElement.value.substring(0, this.startIndex) +\n            selectedItem.value +\n            ' ';\n\n        this.nativeElement.focus();\n\n        const valueLength = this.nativeElement.value.length;\n        this.nativeElement.setSelectionRange(valueLength, valueLength);\n\n        this.selectItem.emit(selectedItem);\n        this.stopSearch();\n    }\n\n    /**\n     * Updates mention list items\n     *\n     * @param items\n     *\n     * @author Roy Freij <info@royfreij.nl>\n     * @version 1.0.0\n     */\n    private updateMentionListItems(items: NgxMention[]) {\n        if (this.mentionList) {\n            this.mentionList.items = items;\n            this.mentionList.hidden = items.length === 0;\n            this.mentionList.resetScrollTop();\n        }\n    }\n\n    /**\n     * Shows mention list\n     *\n     * @author Roy Freij <info@royfreij.nl>\n     * @version 1.0.0\n     */\n    private showMentionList() {\n        if (this.mentionList === null) {\n            const componentFactory = this.componentResolver.resolveComponentFactory(\n                NgxMentionListComponent,\n            );\n            const componentRef = this.viewContainerRef.createComponent(\n                componentFactory,\n            );\n\n            this.mentionList = componentRef.instance;\n        }\n\n        this.mentionList.activeIndex = 0;\n        this.mentionList.position(this.nativeElement);\n        this.mentionList.resetScrollTop();\n        this.mentionList.ngxMentionConfig = this.ngxMentionConfig;\n\n        if (!this.mentionListItemClick$) {\n            this.mentionListItemClick$ = this.mentionList.itemClick.subscribe(\n                () => {\n                    this.onItemSelect();\n                },\n            );\n        }\n    }\n\n    /**\n     * Stops event\n     *\n     * @param $event\n     *\n     * @author Roy Freij <info@royfreij.nl>\n     * @version 1.0.0\n     */\n    private stopEvent($event: KeyboardEvent): void {\n        $event.preventDefault();\n        $event.stopPropagation();\n        $event.stopImmediatePropagation();\n    }\n\n    /**\n     * Stops search\n     *\n     * @author Roy Freij <info@royfreij.nl>\n     * @version 1.0.0\n     */\n    private stopSearch() {\n        if (this.mentionList) {\n            this.mentionList.hidden = true;\n        }\n\n        this.searching = false;\n    }\n\n    /**\n     * on destroy\n     *\n     * @author Roy Freij <roy@bsbip.com>\n     * @version 1.0.0\n     */\n    public ngOnDestroy(): void {\n        this.input$.unsubscribe();\n        this.keyDown$.unsubscribe();\n        this.blur$.unsubscribe();\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NgxMentionListComponent } from './ngx-mention-list/ngx-mention-list.component';\nimport { NgxMentionDirective } from './ngx-mention.directive';\n\n@NgModule({\n    declarations: [NgxMentionDirective, NgxMentionListComponent],\n    imports: [CommonModule],\n    exports: [NgxMentionDirective],\n})\nexport class NgxMentionModule {}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { NgxMentionConfig } from 'projects/ngx-mention/src/lib/ngx-mention.config';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n    title = 'demo-app';\n\n    public ngxMentionConfig: NgxMentionConfig;\n\n    public items = [\n        {\n            id: 1,\n            value: 'user',\n        },\n        {\n            id: 2,\n            value: 'tekstschrijver',\n        },\n        {\n            id: 3,\n            value: 'admin',\n        },\n        {\n            id: 4,\n            value: 'abominablejustine',\n        },\n        {\n            id: 5,\n            value: 'abominable_justine',\n        },\n        {\n            id: 6,\n            value: 'abominable',\n        },\n        {\n            id: 7,\n            value: 'alarmingjustine',\n        },\n        {\n            id: 8,\n            value: 'alarming_justine',\n        },\n        {\n            id: 9,\n            value: 'appallingjustine',\n        },\n        {\n            id: 10,\n            value: 'appalling_justine',\n        },\n        {\n            id: 11,\n            value: 'atrociousjustine',\n        },\n        {\n            id: 12,\n            value: 'atrocious_justine',\n        },\n        {\n            id: 13,\n            value: 'awfuljustine',\n        },\n        {\n            id: 14,\n            value: 'awful_justine',\n        },\n    ];\n\n    constructor() {\n        this.ngxMentionConfig = {\n            minimalCharacters: 0,\n        };\n    }\n\n    public onMentionSearch($event: string) {\n        // this.items.push({\n        //     id: 4,\n        //     value: 'crew',\n        // });\n    }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>Ngx mention demo app</title>\n    </head>\n    <body>\n        <input\n            type=\"text\"\n            [ncNgxMention]=\"items\"\n            [ngxMentionConfig]=\"ngxMentionConfig\"\n            (search)=\"onMentionSearch($event)\"\n            style=\"position: relative; line-height: 20px;\"\n        />\n        <textarea\n            [ncNgxMention]=\"items\"\n            [ngxMentionConfig]=\"ngxMentionConfig\"\n            (search)=\"onMentionSearch($event)\"\n            style=\"position: relative; line-height: 20px;\"\n        ></textarea>\n    </body>\n</html>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgxMentionModule } from 'projects/ngx-mention/src/lib/ngx-mention.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n    declarations: [AppComponent],\n    imports: [BrowserModule, NgxMentionModule],\n    providers: [],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}